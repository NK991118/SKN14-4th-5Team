/* c:/Workspaces/Personal_Anything/3rd_to_4th/fourth_project/static/css/style.css (새로운 시작!) */

/* --- 폰트 및 기본 설정 --- */
@import url('https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap');

body {
    /* 웹사이트 전체의 기본 글꼴을 '나눔고딕'으로 설정해. */
    font-family: 'Nanum Gothic', sans-serif;
    
    /* 배경색을 부드러운 연두색 계열로 지정해. 네가 보여준 이미지랑 비슷하게! */
    background-color: #f0f5e4;
    
    /* 배경에 은은한 패턴 이미지를 깔아줘서 심심하지 않게 만들어. */
    background-image: url("https://www.transparenttextures.com/patterns/escheresque.png");
    
    /* 네비게이션 바가 고정(fixed)되어 있으니, 본문이 가려지지 않게 위쪽에 여백을 줘. */
    padding-top: 56px; /* 보통 부트스트랩 네비게이션 바의 높이가 56px이야. */
}


/* --- 레이아웃 구조 (가장 중요!) --- */

/* 상단 네비게이션 바 스타일 */
.navbar {
    /* position: fixed;는 스크롤을 내려도 항상 화면 상단에 고정시키는 속성이야. */
    position: fixed;
    
    /* 화면 맨 위(top: 0)에 붙여. */
    top: 0;
    
    /* 화면의 전체 너비를 다 차지하게 만들어. */
    width: 100%;
    
    /* 다른 요소들보다 항상 위에 보이도록 z-index 값을 높게 설정해. */
    z-index: 1030; 
}

/* 네비게이션 바의 배경색을 초록색 계열로 지정해. */
.navbar-custom {
  background-color: #4eaf51 !important; /* !important는 다른 스타일 규칙보다 우선 적용하라는 뜻. */
}

/* 네비게이션 바의 브랜드 이름과 링크 글자색을 흰색으로 만들어. */
.navbar-custom .navbar-brand,
.navbar-custom .nav-link {
  color: white !important;
}

/* 왼쪽 사이드바 스타일 */
.sidebar {
    /* 사이드바도 스크롤과 상관없이 항상 왼쪽에 고정시켜. */
    position: fixed;
    
    /* 상단 네비게이션 바 바로 아래(top: 56px)부터 시작하게 위치를 잡아. */
    top: 56px;
    
    /* 화면 왼쪽(left: 0)에 붙여. */
    left: 0;
    
    /* 사이드바의 너비를 240px로 지정해. */
    width: 240px;
    
    /* 높이는 화면 전체 높이에서 네비게이션 바 높이를 뺀 만큼 꽉 채워. */
    height: calc(100vh - 56px);
    
    /* 사이드바의 배경색을 밝은 연두색으로 지정해. */
    background-color: #e2f0d9;
    
    /* 내용이 너무 많아지면 스크롤이 생기도록 해. */
    overflow-y: auto;

    /* 안쪽에 약간의 여백을 줘서 내용이 너무 붙지 않게 해. */
    padding: 1rem;
    
    /* 다른 요소들보다 위에 보이도록 z-index 설정. */
    z-index: 1020;
}

/* 사이드바 안의 링크(<a> 태그) 스타일 */
.sidebar a {
    /* 링크들을 세로로 정렬하기 위해 블록 요소로 바꿔. */
    display: block;

    /* 글자색을 약간 어두운 색으로. */
    color: #333;

    /* 위아래, 좌우로 여백을 줘서 클릭하기 쉽게 만들어. */
    padding: 10px 15px;

    /* 링크 밑줄을 없애. */
    text-decoration: none;

    /* 모서리를 살짝 둥글게. */
    border-radius: 8px;

    /* 마우스를 올렸을 때 배경색이 바뀌는 효과를 부드럽게 만들어. */
    transition: background-color 0.2s;
}

/* 사이드바 링크에 마우스를 올렸을 때의 스타일 */
.sidebar a:hover {
    /* 배경색을 조금 더 진한 색으로 바꿔서 활성화된 느낌을 줘. */
    background-color: #d4e7c5;
}


/* 메인 콘텐츠 영역 스타일 */
.main-content {
    /* 왼쪽 사이드바 너비(240px)만큼 왼쪽 여백을 줘서 내용이 겹치지 않게 해. */
    margin-left: 240px;
    
    /* 콘텐츠 주변에 여백을 줘서 답답해 보이지 않게 만들어. */
    padding: 2rem;
}


/* --- 공용 컴포넌트 스타일 --- */

/* 콘텐츠를 담는 카드(card) 스타일 */
.card {
    /* 테두리는 없애고, */
    border: none;
    
    /* 모서리를 둥글게 (15px) */
    border-radius: 15px;

    /* 입체적으로 보이도록 그림자 효과를 줘. */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);

    /* 다른 요소들과의 간격을 위해 아래쪽에 여백을 줘. */
    margin-bottom: 1.5rem;
}

/* --- AI 첨삭 결과 페이지 전용 스타일 --- */

/* 학생 답안과 모범 답안 텍스트 박스의 스타일을 지정하는 부분이야. */
.answer-textarea {
    /* ★★★ 바로 여기가 높이 조절 손잡이야! ★★★ */
    /* 400px 정도로 넉넉하게 높이를 지정해줘. */
    height: 400px; 
    
    /* 글자 크기도 살짝 키워서 가독성을 높여주자. */
    font-size: 0.9rem; 
    
    /* 혹시 모를 가로 스크롤을 방지하고, 텍스트가 자동으로 줄바꿈되도록 설정해. */
    white-space: pre-wrap; 
}



/* 타이머 전체를 감싸는 컨테이너 스타일 */
#floating-timer-widget {
    position: fixed; /* 화면 스크롤과 상관없이 항상 같은 위치에 고정시켜줘. */
    bottom: 30px; /* 화면 아래쪽에서 30px 떨어진 곳에 위치. */
    right: 30px; /* 화면 오른쪽에서 30px 떨어진 곳에 위치. */
    z-index: 1100; /* 다른 요소들(사이드바, 네비바 등)보다 항상 위에 보이게 z-index를 높게 설정. */
    display: flex; /* 내부 요소들(시간 표시, 버튼들)을 가로로 정렬하기 위해 flexbox 사용. */
    flex-direction: column; /* 세로 방향으로 정렬. */
    align-items: center; /* 세로 방향으로 중앙 정렬. */
    gap: 15px; /* 시간 표시부와 버튼들 사이에 15px 간격을 줘. */
    background-color: rgba(255, 255, 255, 0.8); /* 뒷 배경이 살짝 비치는 반투명 흰색. */
    padding: 15px; /* 안쪽 여백을 줘서 답답하지 않게. */
    border-radius: 50px; /* 전체 위젯 모서리를 둥글게. */
    backdrop-filter: blur(5px); /* 뒷 배경을 흐리게 해서 고급스러운 느낌을 줘 (모든 브라우저에서 지원되진 않아). */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15); /* 은은한 그림자 효과. */
}

/* 시간 숫자가 표시될 동그라미 스타일 */
#timerDisplay {
    background-color: #4eaf51; /* 우리 프로젝트의 메인 초록색. */
    color: white; /* 글자는 흰색으로. */
    width: 130px; /* 원의 너비. */
    height: 130px; /* 원의 높이. */
    border-radius: 50%; /* 이 속성으로 완벽한 원을 만들어. */
    display: flex; /* 원 안의 텍스트를 정중앙에 배치하기 위해 flexbox 사용. */
    justify-content: center; /* 가로 중앙 정렬. */
    align-items: center; /* 세로 중앙 정렬. */
    font-size: 1.5rem; /* 글자 크기를 키워줘. */
    font-weight: bold; /* 글자를 굵게. */
    border: 3px solid white; /* 흰색 테두리를 살짝 둘러줘. */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* 원 자체에도 작은 그림자 효과. */
}

/* 시작/일시정지/초기화 버튼들을 감싸는 컨테이너 */
.timer-controls {
    display: flex; /* 버튼들을 가로로 나란히 배치. */
    gap: 10px; /* 버튼들 사이에 10px 간격. */
}

/* 3개의 버튼 공통 스타일 */
.timer-controls button {
    width: 50px; /* 버튼 원의 너비. */
    height: 50px; /* 버튼 원의 높이. */
    border-radius: 50%; /* 버튼도 동그랗게. */
    border: none; /* 기본 테두리는 제거. */
    color: white; /* 아이콘 색상은 흰색. */
    font-size: 1.2rem; /* 아이콘 크기. */
    cursor: pointer; /* 마우스를 올리면 손가락 모양으로. */
    transition: all 0.2s ease; /* 모든 효과(배경색, 그림자)가 0.2초 동안 부드럽게 변하게. */
    display: flex; /* 아이콘을 정중앙에 배치하기 위한 flex. */
    justify-content: center;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2); /* 버튼 그림자. */
}

/* 버튼에 마우스를 올렸을 때 스타일 */
.timer-controls button:hover {
    transform: translateY(-2px); /* 살짝 위로 떠오르는 효과. */
    box-shadow: 0 4px 8px rgba(0,0,0,0.3); /* 그림자를 더 진하게. */
}

/* 시작 버튼(#startBtn) 개별 색상 */
#startBtn { background-color: #28a745; } /* 초록색 계열 */
/* 일시정지 버튼(#pauseBtn) 개별 색상 */
#pauseBtn { background-color: #ffc107; } /* 노란색 계열 */
/* 초기화 버튼(#resetBtn) 개별 색상 */
#resetBtn { background-color: #dc3545; } /* 빨간색 계열 */

/* --- Carousel 커스텀 스타일 --- */

/* ★★★ 바로 여기가 네가 수정할 '크기 조절 손잡이'야! ★★★ */
#imageCarousel {
    /* --carousel-max-height 라는 이름의 변수를 만들고 기본값을 90vh로 설정. */
    /* vh는 화면 세로 높이 단위. 90vh는 화면 높이의 90%를 의미해. */
    --carousel-max-height: 300vh; 
}

.carousel-inner {
    /* Carousel의 최대 높이를 우리가 만든 변수 값으로 설정. */
    max-height: var(--carousel-max-height);
    text-align: center; 
}

.carousel-item img {
    object-fit: contain;
    /* 이미지의 최대 높이도 똑같이 변수 값으로 설정. */
    max-height: var(--carousel-max-height);
    /* 이미지가 너무 작게 보이지 않도록 최소 높이도 설정해주면 좋아. */
    min-height: 400px;
}

/* ==========================================================================
   --- 🤖 AI 첨삭 결과 페이지 & 채팅창 스타일 (최종 결정판) ---
   ========================================================================== */

/* --- [1] 채팅창 전체 레이아웃 --- */

/* --- [1] 채팅창 전체 레이아웃 --- */

/* 오른쪽 컬럼에 고정될 채팅 위젯의 전체 컨테이너 */
#fixed-chat-container {
    position: sticky;
    top: 80px;
    
    /* 채팅창의 높이를 유연하게 조절 */
    min-height: 500px;
    max-height: calc(100vh - 100px);
    
    /* ★★★ 1. 이 컨테이너를 Flexbox로 만들어서 자식(.card)을 제어! ★★★ */
    display: flex;
    flex-direction: column;
}

/* 채팅창의 실제 틀이 되는 카드 요소 */
#fixed-chat-container .card {
    /* ★★★ 2. 부모(flex container)의 남는 공간을 모두 차지하도록 설정! ★★★ */
    flex-grow: 1; 
    
    /* 이 카드 자체도 내부 요소를 정렬하기 위한 Flexbox 컨테이너가 됨 */
    display: flex;
    flex-direction: column;
    width: 100%;
    
    /* ★★★ 3. (중요!) 높이 계산이 꼬이지 않도록 min-height를 0으로 초기화! ★★★ */
    min-height: 0;
}

/* 채팅 내용과 입력창이 들어가는 card-body 영역 */
#fixed-chat-container .card-body {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden; 
    padding: 0.5rem;
    min-height: 0; /* 자식 요소의 높이 계산을 돕는 트릭 */
}

/* --- [2] 채팅 기록 & 말풍선 스타일 --- */

/* 실제 대화 내용이 표시될 스크롤 영역 */
#chat-history {
    flex-grow: 1;
    overflow-y: auto; /* ★★★ 이제 진짜 스크롤이 생길 거야! ★★★ */
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
}

/* 모든 말풍선의 공통 스타일 */
.chat-message {
    padding: 8px 14px;
    border-radius: 18px;
    margin-bottom: 8px;
    max-width: 85%;
    word-wrap: break-word;
    line-height: 1.5;
}

/* 사용자가 보낸 메시지 말풍선 */
.user-message {
    background-color: #dcf8c6;
    align-self: flex-end;
    margin-left: auto;
}

/* AI가 보낸 메시지 말풍선 */
.ai-message {
    background-color: #f1f0f0;
    align-self: flex-start;
}

/* --- [3] AI 말풍선 내부의 마크다운 서식 스타일 --- */

.ai-message h3, .ai-message h4 {
    font-size: 1.1rem;
    font-weight: bold;
    margin-top: 10px;
    margin-bottom: 8px;
    padding-bottom: 4px;
    border-bottom: 1px solid #e0e0e0;
}

.ai-message ul, .ai-message ol {
    padding-left: 20px;
    margin-bottom: 10px;
}

.ai-message p:last-child {
    margin-bottom: 0;
}

/* --- [4] '입력 중...' 로딩 애니메이션 스타일 --- */

.loading-dots {
    display: flex;
    align-items: center;
    padding: 12px 16px;
}

.loading-dots .dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #999;
    margin: 0 3px;
    animation: wave 1.4s infinite ease-in-out;
}

.loading-dots .dot:nth-child(2) { animation-delay: -1.2s; }
.loading-dots .dot:nth-child(3) { animation-delay: -1.0s; }

@keyframes wave {
    0%, 80%, 100% { transform: scale(0); }
    40% { transform: scale(1.0); }
}

/* --- [5] 채팅 입력 폼 스타일 --- */

#chat-form {
    flex-shrink: 0;
    padding-top: 0.5rem;
    border-top: 1px solid #eee;
}
    
/* ★★★ difflib 시각화를 위한 CSS 클래스 추가! ★★★ */
.diff-added {
    background-color: #d4edda; /* 부드러운 초록색 */
    padding: 1px 0;
    border-radius: 3px;
}
.diff-removed {
    background-color: #f8d7da; /* 부드러운 빨간색 */
    padding: 1px 0;
    border-radius: 3px;
    text-decoration: line-through; /* 취소선 */
}

    /* ★★★ AI 메시지 내부의 서식을 위한 스타일 추가! ★★★ */
.ai-message h3, .ai-message h4 {
    font-size: 1.1rem; /* 제목 글자 크기 살짝 키우기 */
    margin-top: 10px;
    margin-bottom: 5px;
    font-weight: bold;
}
.ai-message ul {
    padding-left: 20px; /* 목록 들여쓰기 */
    margin-bottom: 0;
}
.ai-message p {
    margin-bottom: 0.5rem; /* 문단 간격 살짝 주기 */
}